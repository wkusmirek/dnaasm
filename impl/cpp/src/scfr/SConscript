# -*- mode: Python; -*-
import platform, os

Import('env')
Import('shared_lib_path')
Import('UNIX_SYSTEM')
Import('MAX_KMER_LENGTH')

#------------------------------------------------------------------------------
# build Scaffolder shared library
#------------------------------------------------------------------------------

lib_name = 'dnaasm_scfr'

env_dll = env.Clone()

if(platform.system() == "Linux"):
   env_dll.Prepend( LIBS = [ 'dnaasm_common', 'boost_thread', 'boost_filesystem' ] )

elif(platform.system() == "Darwin"):
   env_dll.Prepend( LIBS = [ 'dnaasm_common', 'boost_thread-mt', 'boost_system' ] )

elif(platform.system() == "Windows"):
   env_dll.Append( CPPFLAGS = ' /D "CALC_EXPORTS" /W4 ' )
   env_dll.Prepend( LIBS = [ 'dnaasm_common' ] )

else:
   print(platform.system() + " not supported")

env_dll.Append( CPPDEFINES=['MAX_KMER_LENGTH='+MAX_KMER_LENGTH] )

scfr_lib = env_dll.SharedLibrary(
    target = os.path.join(shared_lib_path, lib_name),
    source = [
        'common.cpp',
        'scaffold.cpp',
        'ScaffoldParameters.cpp',
        'Scaffolder.cpp',
        #'BloomFilter.cpp',
        'MatepairGraph.cpp',
        'MatepairGraphBuilder.cpp',
        'KmerPositionFinder.cpp',
        'BloomFilterFiller.cpp',
        'ContigPairGraph.cpp',
        'ContigPairMaker.cpp',
        'ContigPairValidator.cpp',
        'ContigLoader.cpp',
        'FileLogger.cpp'
    ])

Return('scfr_lib')
